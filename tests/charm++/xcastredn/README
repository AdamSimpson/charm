Program that measures the performance of:
1) Charm Array broadcast/reduction
2) CkMulticast Array section multicast/reduction
3) Comlib Array section multicast/reduction (not yet implemented)

-------------------------------------------------------------------------------
make and make test should do the trick.


-------------------------------------------------------------------------------
Usage:
- The program can be run with no args (uses a set of defaults)
- All the args are optional. If the section / array size are specified, then all three dimensions must be supplied.

The args must be specified in the following order:

- numRepeats          [int]  : The number of times to repeat the collective (xcast/redn) loop
- msgSizeMin          [int]  : The minimum message size in KB
- msgSizeMax          [int]  : The maximum message size in KB
- isSectionContiguous [bool] : Should the array section be contiguous (0/1) [see below]

If the dimensions of the array section are specified, then all three dims must be specified. A value of 0 along one dimension will result in a "logically" planar section.
- sectionDimX         [int]
- sectionDimY         [int]
- sectionDimZ         [int]

If the dimensions of the chare array are specified, then all three dims must be specified
- arrayDimX           [int]
- arrayDimY           [int]
- arrayDimZ           [int]i


-------------------------------------------------------------------------------
Note:

1) isSectionContiguous can toggle the creation of sections where elements are
   picked at discrete intervals within the chare array. This makes sense only
   if the section size (sectionDimX, sectionDimY, sectionDimZ) is appropriately
   smaller than the array size. For eg, if the array is (10,10,10) and the
   section size is (2,2,0) then indices of the elements in the section will be:

    contiguous section: (0,0,0) (0,1,0) (1,0,0) (1,1,0)
    not contiguous sec: (0,0,0) (0,5,0) (5,0,0) (5,5,0)


