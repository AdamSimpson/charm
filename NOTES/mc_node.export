/* THIS FILE CONTAINS ALL THE ROUTINES PROVIDED BY THE CHARE KERNEL FOR
   A NODE PROCESS ON A DISTRIBUTED MEMORY MACHINE */

extern McTimer();
    /* 

extern int McMaxPeNum();
    /* to avoid ambiguity: returns the largest PeNum among the NODE pes.
       i.e. don't count the host for the shared memory machines */

extern ArrivedNodeMsgLength();
	/* gives the length of the next message arrived at the node */

extern McNodeInit();
    /* except for initialization of global variables used by the node */

extern long McMyPeNum();
    /* PeNums must vary between 0..X (with a FEW unused numbers allowed. 
       e.g. 0. But don't use the arpa-net ID etc. as processor ID. Just a 
       serial number. You may have to set the serial number up during INIT in 
       a global variable in this file. */


extern int McNodeProbe();
    /* Return 0 if there is no message waiting to be "received". 1 otherwise */

extern McNodeSyncSend();
    /* send the message of "size" bytes to the destPE. 
       Return only after the message has been sent, i.e.,
       the buffer (msg) is free for re-use. */

extern McNodeSyncReceive();
    /* Receive message into "buffer" of size "size" specified by user.... */

extern int McHostPeNum();
	/* returns the PeNum of the host processor */


